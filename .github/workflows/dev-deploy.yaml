name: Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

jobs: 
  unit-testing:
    name: Unit-Testing
    strategy:
      matrix:
        operating_system: [ubuntu-latest]
    runs-on: ${{matrix.operating_system}} 
    environment:
      name: Dev
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Install Nginx and Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y nginx

      - name: Start Nginx
        run: |
          sudo systemctl start nginx
          sudo systemctl enable nginx  # Optional: to enable on boot

      - name: Check Nginx Status
        run: |
          sudo systemctl status nginx

      - name: Display Nginx Version
        run: |
          nginx -v

  code-coverage:
    name: Code Coverage
    needs: [unit-testing]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y nginx lcov
     
  
      - name: Download NGINX Source
        run: |
            wget http://nginx.org/download/nginx-1.25.2.tar.gz
            tar -xzvf nginx-1.25.2.tar.gz
            cd nginx-1.25.2
    
      - name: Build NGINX with Coverage
        run: |
            cd nginx-1.25.2
            ./configure --with-debug --with-cc-opt="-O0 -fprofile-arcs -ftest-coverage" --with-ld-opt="-lgcov"
            make
            sudo make install
    
      - name: Run Tests
        run: |
            # Start nginx
            sudo /usr/local/nginx/sbin/nginx
            # Example test commands, replace these with your actual tests
            curl http://localhost:80
            # Stop nginx after tests
            sudo /usr/local/nginx/sbin/nginx -s stop
    
      - name: Collect Code Coverage
        run: |
            lcov --capture --directory . --output-file coverage.info
            lcov --remove coverage.info '/usr/*' --output-file coverage.info # Optional: remove system files
            lcov --list coverage.info
    
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
            name: coverage-report
            path: coverage.info
     
  Docker:
    name: Containerization
    needs: [unit-testing, code-coverage]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
                  
      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "Logging in to Docker..."
          echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin || { echo "Docker login failed"; exit 1; }
     
      - name: Check Docker version
        run: docker --version

        